{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cshim\\\\Desktop\\\\work\\\\React\\\\udemy-react-248-FoodApp+API+Form+Backend\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n  _s2 = $RefreshSig$();\nimport { useEffect, useState, useCallback } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  _s(useEffect(_s(() => {\n    _s();\n    const fetchMeals = useCallback(async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(\"https://react-http-4ef0a-default-rtdb.firebaseio.com/Meals.json\");\n        const responseData = await response.json();\n        const loadedMeals = [];\n        for (const key in responseData) {\n          loadedMeals.push({\n            id: key,\n            name: responseData[key].name,\n            description: responseData[key].description,\n            price: responseData[key].price\n          });\n        }\n        setMeals(loadedMeals);\n      } catch (error) {\n        setError(error.message);\n      }\n      setIsLoading(false);\n    }, []);\n    ;\n    fetchMeals();\n  }, \"av5dUB6UhPmMpUzOzrVSCbi6pWA=\"), []), \"av5dUB6UhPmMpUzOzrVSCbi6pWA=\");\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this));\n  let content = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Meals Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 17\n  }, this);\n  if (mealsList.length > 0) {\n    content = /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: mealsList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }, this);\n  }\n  if (error) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this);\n  }\n  if (isLoading) {\n    content = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s2(AvailableMeals, \"Iiz9r13wHP3oUKY8Pc8nCUik7ZA=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","useCallback","Card","MealItem","classes","jsxDEV","_jsxDEV","AvailableMeals","_s2","_s","$RefreshSig$","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMeals","response","fetch","responseData","json","loadedMeals","key","push","id","name","description","price","message","mealsList","map","meal","fileName","_jsxFileName","lineNumber","columnNumber","content","children","length","className","_c","$RefreshReg$"],"sources":["C:/Users/cshim/Desktop/work/React/udemy-react-248-FoodApp+API+Form+Backend/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState, useCallback } from \"react\";\nimport Card from \"../UI/Card\";\nimport MealItem from \"./MealItem/MealItem\";\nimport classes from \"./AvailableMeals.module.css\";\n\nconst AvailableMeals = () => {\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMeals = useCallback(async () => {\n      setIsLoading(true);\n      try {\n        const response = await fetch(\n          \"https://react-http-4ef0a-default-rtdb.firebaseio.com/Meals.json\"\n        );\n        const responseData = await response.json();\n\n        const loadedMeals = [];\n\n        for (const key in responseData) {\n          loadedMeals.push({\n            id: key,\n            name: responseData[key].name,\n            description: responseData[key].description,\n            price: responseData[key].price,\n          });\n        }\n        setMeals(loadedMeals);\n      } catch (error) {\n        setError(error.message);\n      }\n      setIsLoading(false);\n    },[]);;\n\n    fetchMeals();\n  }, []);\n\n  const mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  let content = <p>No Meals Found</p>;\n\n  if (mealsList.length > 0) {\n    content = <ul>{mealsList}</ul>;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{content}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}